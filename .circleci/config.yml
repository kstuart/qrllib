version: 2
jobs:
  build:
    docker:
      - image: zondax/qrl-build-images:xenial-qrllib
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: cmake -DBUILD_PYTHON=ON -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5
      - run: make
      - run: export GTEST_COLOR=1 && ctest -VV

  test_python:
    docker:
      - image: zondax/qrl-build-images:xenial-qrllib
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: python3 setup.py test

  build_emscripten:
    docker:
      - image: zondax/qrl-build-images:xenial-emscripten
    environment:
      BASH_ENV: ".circleci/bash_env.sh"
    steps:
      - checkout
      - run: git submodule update --init --recursive

      # FIXME: Move this to the image to save time
      - run: .circleci/setup_emscripten.sh

      # Build
      - run: emconfigure cmake -DBUILD_WEBASSEMBLY=ON -DCMAKE_BUILD_TYPE=Release
      - run: emmake make
      # FIXME: Disable .mem for node.js until this gets fixed: https://github.com/kripken/emscripten/issues/2542
      - run: emcc --bind libjsqrl.so -O3 --memory-init-file 0  -o libjsqrl.js
      - run: emcc --bind libjsqrl.so -O3 -s WASM=1 -o web-libjsqrl.js
      - run: echo "QRLLIB=Module;" >> web-libjsqrl.js
      # Fix paths of web-libjsqrl.wasm for web clients
      - run: sed -i 's/web-libjsqrl\.wasm/\/web-libjsqrl\.wasm/g' web-libjsqrl.js

      - run: node tests/js/test.js

  deploy_pypi:
    docker:
      - image: zondax/qrl-build-images:xenial-qrllib
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: python3 setup.py test

workflows:
  version: 2
  build_all:
    jobs:
      - build
      - test_python
      #- build_emscripten

